<?xml version = '1.0' encoding = 'UTF-8'?>
<aliases>
   <alias name="sqlhist">
      <description/>
      <queries>
         <query>
            <sql><![CDATA[
with sqlhist as (
SELECT 'CACHE' AS FROMWHERE,
       0 AS SNAP_ID,
       SQL_ID,
       PLAN_HASH_VALUE,
       SQL_PROFILE,
       SQL_PLAN_BASELINE,
       MODULE,
       PARSING_SCHEMA_NAME,
       EXECUTIONS,
       ROUND (ELAPSED_TIME / DECODE (EXECUTIONS, 0, 1, EXECUTIONS) / 1000) AS TIME_MS,
       ROUND (ROWS_PROCESSED / DECODE (EXECUTIONS, 0, 1, EXECUTIONS)) AS ROWS_PROCESSED,
       ROUND ((CPU_TIME / DECODE (ELAPSED_TIME, 0, 1, ELAPSED_TIME)) * 100) AS CPU,
       ROUND ((JAVA_EXEC_TIME / DECODE (ELAPSED_TIME, 0, 1, ELAPSED_TIME)) * 100) AS JAVA,
       ROUND ((PLSQL_EXEC_TIME / DECODE (ELAPSED_TIME, 0, 1, ELAPSED_TIME)) * 100) AS PLSQL,
       ROUND ((USER_IO_WAIT_TIME / DECODE (ELAPSED_TIME, 0, 1, ELAPSED_TIME)) * 100) AS IO,
       ROUND ((CONCURRENCY_WAIT_TIME / DECODE (ELAPSED_TIME, 0, 1, ELAPSED_TIME)) * 100) CONCURR,
       ROUND ((APPLICATION_WAIT_TIME / DECODE (ELAPSED_TIME, 0, 1, ELAPSED_TIME)) * 100) APPTIME,
       TO_CHAR (FORCE_MATCHING_SIGNATURE) FORCE_MATCHING_SIGNATURE,
       TO_CHAR (EXACT_MATCHING_SIGNATURE) EXACT_MATCHING_SIGNATURE,
       OPTIMIZER_MODE,
       LAST_ACTIVE_TIME,
       'EXEC TU_CREATE_BASELINE(''' || sql_id || ''',' || plan_hash_value || ');' AS create_baseline
  FROM V$SQL
 UNION ALL
SELECT 'HIST' AS FROMWHERE,
       A.SNAP_ID,
       SQL_ID,
       PLAN_HASH_VALUE,
       SQL_PROFILE,
       '',
       MODULE,
       PARSING_SCHEMA_NAME,
       EXECUTIONS_DELTA,
       ROUND (ELAPSED_TIME_DELTA / DECODE (EXECUTIONS_DELTA, 0, 1, EXECUTIONS_DELTA) / 1000),
       ROUND (ROWS_PROCESSED_DELTA / DECODE (EXECUTIONS_DELTA, 0, 1, EXECUTIONS_DELTA)),
       ROUND ((CPU_TIME_DELTA / DECODE (ELAPSED_TIME_DELTA, 0, 1, ELAPSED_TIME_DELTA)) * 100),
       ROUND ((JAVEXEC_TIME_DELTA / DECODE (ELAPSED_TIME_DELTA, 0, 1, ELAPSED_TIME_DELTA)) * 100),
       ROUND ((PLSEXEC_TIME_DELTA / DECODE (ELAPSED_TIME_DELTA, 0, 1, ELAPSED_TIME_DELTA)) * 100),
       ROUND ((IOWAIT_DELTA / DECODE (ELAPSED_TIME_DELTA, 0, 1, ELAPSED_TIME_DELTA)) * 100),
       ROUND ((CCWAIT_DELTA / DECODE (ELAPSED_TIME_DELTA, 0, 1, ELAPSED_TIME_DELTA)) * 100),
       ROUND ((APWAIT_DELTA / DECODE (ELAPSED_TIME_DELTA, 0, 1, ELAPSED_TIME_DELTA)) * 100),
       TO_CHAR(FORCE_MATCHING_SIGNATURE),
       '0',
       OPTIMIZER_MODE,
       BEGIN_INTERVAL_TIME,
       'EXEC TU_CREATE_BASELINE(''' || sql_id || ''',' || plan_hash_value || ',' || a.snap_id || ');'
  FROM DBA_HIST_SQLSTAT A, DBA_HIST_SNAPSHOT B
 WHERE A.SNAP_ID = B.SNAP_ID AND A.DBID = B.DBID
)
select * from sqlhist where sql_id = :sqlid order by last_active_time
            ]]></sql>
         </query>
      </queries>
   </alias>
</aliases>